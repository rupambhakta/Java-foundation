Q5.What are the benefits of making class outside the main class ? 

In object-oriented programming, it is common to define classes outside of the main program class or method. Here are some benefits of doing so:

    Reusability: By defining a class outside of the main program class or method, you can reuse that class in other parts of your program or in other programs. This can save time and effort because you don't have to rewrite the same code multiple times.

    Modularity: Defining classes outside of the main program class or method can help make your code more modular and easier to maintain. Each class can represent a specific functionality or behavior, making it easier to understand and modify.

    Encapsulation: When you define a class outside of the main program class or method, you can use access modifiers to control the visibility and accessibility of the class's member variables and methods. This helps to enforce encapsulation, which is the principle of hiding implementation details and providing a clean interface for other code to interact with.

    Testability: Defining classes outside of the main program class or method can make it easier to test your code. You can create unit tests for each class to ensure that it behaves correctly and interacts with other classes as expected.

    Scalability: As your program grows and becomes more complex, defining classes outside of the main program class or method can help you manage that complexity. By breaking your code into smaller, more manageable classes, you can avoid creating monolithic classes that are difficult to understand and modify.

In summary, defining classes outside of the main program class or method can make your code more modular, reusable, testable, and scalable, while also enforcing encapsulation.